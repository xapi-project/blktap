Version 3.6.0 - 25th May 2018
================================
  Changed block tracking
  Nutanix support

  CA-222124: Handle race-condition in tap-ctl spawn
  CA-223652: Add delay to reduce number of syslog messages
  CA-227162: Enable tapdisk forced shutdown mode
  CA-220042: sigact.sa_mask is not initialized (CID:57552)
  CA-217394: Handle scheduler uuid data type overflow in tapdisk
  CP-18038: Fix multiple resource leaks
  CA-221904: vhd create EINVAL, report errors
  Add a check to force O_DSYNC if needed
  CA-220042: adding error handler for sigemptyset() function
  CA-225067: tap_ctl_{spawn,create}: move tapdisk to cgroup slice
  Fix udev rules to prevent td devices being bound by Dom0 services
  CA-220608: Corrected potential memory leak
  CA-250385: Check if vbd image is in chain, before retrieving
  CA-220510: Initialsed vhd_file_table pointer before use
  CP-23825: Structure lvm-util as a business logic library with an execution wrapper
  CA-260195 Only log once for watchdog timeout
  CA-254690: Add a flag to control logging based on call context
  CA-260298 Add the device to invalid pe_start error message
  CP-26852: Support building with upstream Linux
  CA-277128: remove redundant, broken RRD code from tapdisk

Version 3.5.0 - 15th Nov 2016
================================
  CA-222244: Fix resource leaks in vhd_shift_metadata()
  CA-222242: memset() 1 byte instead of 4
  CA-222139: Resource leak in tap_ctl_allocate_device()
  CA-222077: Fix bugs in td_fdreceiver_start()
  CA-216249: Check length of socket name before copying
  CA-222003: Fix NULL dereference bug
  CA-221864: Fix bugs in vhd_journal_read_locators()
  CA-221814: Fix resource leak in vhdi_create()
  CA-216250: Fix resource leak
  CA-215114: Resource leak in vhd_util_coalesce_open_output()
  CA-220481: Fixes in tap_ctl_stats_fwrite()
  CP-18757: Refactor the way we use ctx->fd (CID: 28676)
  CA-220467 Read or Write to pointer after free
  CA-220467 Double close
  CA-220467: Destination buffer too small
  CA-220467: Dereference null return value
  CA-220467 Unchecked return value from library
  CA-220482: Check return value of fwrite()
  CA-220518: Potentially uninitialised variable used
  CA-220479: Remove nonsensical checks
  CA-220478: Fix leaked socket file descriptor
  CA-220463: Ensure string fits in buffer before copying
  CA-220442: Check length of socket name before copying
  CA-220444: Fix possible race condition
  CA-220436: Fix Resource leak in tap-ctl-list.c
  CA-220434: Return 'err' instead of 0
  CA-220433: Replace 'format' with string literal in tap-ctl-list.c
  CA-220226: Fix bugs in part-util.c
  CA-215084: Bug fixes in lvm-util.c
  CA-215080:Uninitialized scalar variable(CID:63812)
  CA-220003: Resource leak for memory allocated to target (CID:57413)
  CA-220002: resource leak for memory allocated to pname (CID:57549)
  CA-220000: memory leak from variable path (CID:57593)
  CA-220041: blkif used after freed (CID:57556)
  CA-219462: Remove lock.h and lock.c
  CP-17399: fix resource leaking asprintf

Version 3.4.0 - 2nd Aug 2016
================================
  CA-211529: Corrected tapdisk stats definitions
  CP-18192: Removed code for xlvhd thin-provisioning
  CP-18025: Change blktap license from GPLv2 to BSD
  CP-18025: Use BSD compliant list.h
  CP-18025: Discontinue use of upstream nbd header file
  CP-18025: Use glibc alternative to PAGE_SIZE macro
  CP-18025: Remove dependence on linux/log2.h

Version 3.3.0 - 24th May 2016
================================
  CA-203150: make systemd service file non-executable
  CA-183670: LVMoISCSI SR fails to come up after a failure.
  CP-13750: Use microseconds as units for polling duration
  CP-13260: Continue polling if requests are found on the final ring check
  CP-13510: Only poll if the CPU is more idle than a threshold specified via xenstore
  CP-13510: Only poll if CPUs are largely idle
  CP-13510: Add cpumond to the repository
  CP-12971: Make polling duration configurable through xenstore
  CP-12971: Allow variable per-VBD polling duration
  CP-12971: Make SIGUSR2 trigger polling immediately
  CP-12971: Add infrastructure to perform blkif ring polling
  CP-12971: Refactor: extract function tapdisk_xenblkif_unsched_chkrng
  CP-12972: scheduler: use microsecond granularity
  CP-12972: scheduler: refactor timeout arithmetic to use macros
  CA-210989: Update read sectors only for a read operation
  CA-207760: Skip updating stats if ring is dead
  CA-204896: destroy stats for a ring marked as dead
  CA-204896: do not update io_ring stats for dead rings
  CA-205513: Removing bad fds from the fdset passed to select call.
  CA-186157: Extract tapdisk stats to separate header
  CP-15135: Converted tapback init script to systemd unit
  Fix build against upstream Xen
  CA-148679: add CRC32 header to ring stats
  CA-186157: Adding extra fields to vbd3 stats structure.
  CA-183298: Tapdisk should move I/O errors to its stats struct

Version 3.2.0 - 24th Sep 2015
================================
  Added code to ask lvm blocks on demand (xlvhd thin-provisioning)

Version 3.1.1 - 24th Sep 2015
================================
  CA-148438: Expose mem_mode flag in statistics file
  CA-161450: Stats between tapdisk and NBD
  CA-161451: Stats between tapdisk and blktap
  CA-165117: Stats between tapdisk and blkfront
  CA-161449: Stats between tapdisk and vdi traffic
  CA-170614: Harden the nbdserver code in tapdisk3
  CP-12399: Prevent tapback from plugging non-blktap2 devices
  CA-169052: Work arounds for NULL uuid in VHD header
  CA-153279: don't complain if there's no tapdisk to signal

Version 3.1.0 - 23th Sep 2015
================================
  Coverity integration
  tapdisk3 shm entry should always be present
  Report read caching status in tap-ctl stat
  Own log directory in package
  Various updates to make it work on CentOS 7

Version 3.0.50 - 26th Mar 2015
================================
