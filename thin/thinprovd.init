#!/bin/bash
# Copyright (c) 2016, Citrix Systems, Inc.
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
#  1. Redistributions of source code must retain the above copyright
#     notice, this list of conditions and the following disclaimer.
#  2. Redistributions in binary form must reproduce the above copyright
#     notice, this list of conditions and the following disclaimer in the
#     documentation and/or other materials provided with the distribution.
#  3. Neither the name of the copyright holder nor the names of its 
#     contributors may be used to endorse or promote products derived from 
#     this software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
# OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
# EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

declare -r DAEMON=/usr/sbin/thinprovd
declare -r PROG=`basename $DAEMON`
declare -r PID_FILE=/var/run/${PROG}.pid

# Source function library.
. /etc/init.d/functions

RETVAL=0

start() {
	test -x $DAEMON || exit 5
	if [ -f $PID_FILE ]; then
		pid=`cat $PID_FILE` 
		echo "$PROG already running with pid $pid"
		return 0
	fi
	echo -n $"Starting $PROG daemon: "
	$DAEMON -d
	RETVAL=$?
	if [ $RETVAL -eq 0 ]; then
		i=`pidof $PROG`
		echo $i > $PID_FILE
		success 
	else
		failure 
	fi
	return $RETVAL
}

stop() {
	echo -n $"Stopping $PROG daemon: "
	test -e $PID_FILE || exit 5
	PID=`cat $PID_FILE`
	kill $PID
	RETVAL=$?
	[ $RETVAL -eq 0 ] && rm -f $PID_FILE
	[ $RETVAL -eq 0 ] && success || failure 
	return $RETVAL
}

restart() {
	stop
	start
}	

case "$1" in
start)
	start
	;;
stop)
	stop
	;;
restart)
	restart
	;;
status)
	status $PROG
	RETVAL=$?
	;;
*)
	echo $"Usage: $0 {start|stop|status|restart}"
	RETVAL=3
esac

exit $RETVAL
